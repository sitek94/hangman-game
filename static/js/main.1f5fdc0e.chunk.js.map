{"version":3,"sources":["components/folk.js","components/you-missed.js","components/letter.js","components/letters.js","components/layout.js","components/modal.js","app.js","hooks/use-random-word.js","index.js"],"names":["folkParts","FolkContainer","children","className","Folk","visiblePartsCount","visibleParts","slice","data-testid","map","part","YouMissed","missedLetters","join","Letter","disabled","clsx","Letters","word","guessedLetters","wordLetters","padStart","MAX_WORD_LENGTH","split","letter","i","includes","Layout","Modal","title","description","buttonText","onButtonClick","noButton","onClick","App","React","isFirstGame","setIsFirstGame","usedLetters","setUsedLetters","setWord","status","setStatus","fetchRandomWord","a","fetch","method","headers","process","response","json","fetchedWord","toUpperCase","randomWord","useRandomWord","handleKeyDown","key","test","concat","window","addEventListener","removeEventListener","length","startNewGame","filter","l","isGameOver","isGameWon","every","isLoading","isError","isSuccess","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f5fdc0e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './folk.scss';\r\n\r\n// Folk's parts are in the order that they are rendered\r\n// during the game.\r\nconst folkParts = [\r\n  'head',\r\n  'neck',\r\n  'corpus',\r\n  'arm arm--right',\r\n  'arm arm--left',\r\n  'hand hand--right',\r\n  'hand hand--left',\r\n  'leg leg--right',\r\n  'leg leg--left',\r\n  'foot foot--right',\r\n  'foot foot--left',\r\n];\r\n\r\nfunction Folk({ visiblePartsCount }) {\r\n  const visibleParts = folkParts.slice(0, visiblePartsCount);\r\n\r\n  return (\r\n    <FolkContainer>\r\n      <div className=\"folk\" data-testid=\"folk\">\r\n        {visibleParts.map((part) => (\r\n          <div key={part} className={part} />\r\n        ))}\r\n      </div>\r\n    </FolkContainer>\r\n  );\r\n}\r\n\r\nFolk.propTypes = {\r\n  visiblePartsCount: PropTypes.number.isRequired,\r\n};\r\n\r\n// Wraps the folk and adds the bar so it's easier to position it\r\nfunction FolkContainer({ children }) {\r\n  return (\r\n    <div className=\"folk-container\">\r\n      <div className=\"bar bar--horizontal\" />\r\n      <div className=\"bar bar--vertical\" />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Folk;\r\n","import PropTypes from 'prop-types';\r\nimport './you-missed.scss';\r\n\r\nfunction YouMissed({ missedLetters }) {\r\n  return (\r\n    <div className=\"you-missed\">\r\n      <div className=\"title\">You missed:</div>\r\n      <div className=\"missed-letters\">{missedLetters.join(' ')}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nYouMissed.propTypes = {\r\n  missedLetters: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default YouMissed;\r\n","import PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport './letter.scss';\r\n\r\nfunction Letter({ disabled, children }) {\r\n  return (\r\n    <div className={clsx('letter', disabled && 'disabled')}>{children}</div>\r\n  );\r\n}\r\n\r\nLetter.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Letter;\r\n","import PropTypes from 'prop-types';\r\nimport Letter from 'components/letter';\r\nimport { MAX_WORD_LENGTH } from 'app';\r\nimport './letters.scss';\r\n\r\nfunction Letters({ word, guessedLetters }) {\r\n  const wordLetters = word\r\n    // Pad the word when its length is less than max length\r\n    .padStart(MAX_WORD_LENGTH)\r\n    .split('');\r\n\r\n  return (\r\n    <div className=\"letters\">\r\n      {wordLetters.map((letter, i) => (\r\n        <Letter key={i} disabled={letter === ' '}>\r\n          {guessedLetters.includes(letter) || letter === '-' ? letter : null}\r\n        </Letter>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nLetters.propTypes = {\r\n  guessedLetters: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  word: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Letters;\r\n","import './layout.scss';\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <div className=\"layout\">\r\n      <div className=\"container\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;","import PropTypes from 'prop-types';\r\nimport './modal.scss';\r\n\r\nfunction Modal({ title, description, buttonText, onButtonClick, noButton }) {\r\n  return (\r\n    <div className=\"modal\">\r\n      <h1 className=\"title\">{title}</h1>\r\n      {description && <p className=\"description\">{description}</p>}\r\n      {!noButton && (\r\n        <button className=\"button\" onClick={onButtonClick}>\r\n          {buttonText}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  onButtonClick: PropTypes.func,\r\n  noButton: PropTypes.bool,\r\n};\r\n\r\nexport default Modal;\r\n","import * as React from 'react';\n\nimport Folk from 'components/folk';\nimport YouMissed from 'components/you-missed';\nimport Letters from 'components/letters';\nimport Layout from 'components/layout';\nimport Modal from 'components/modal';\nimport { useRandomWord } from 'hooks/use-random-word';\n\nexport const MAX_WORD_LENGTH = 11;\nexport const MAX_MISSED_LETTERS = 11;\n\nfunction App() {\n  const [isFirstGame, setIsFirstGame] = React.useState(true);\n  const [usedLetters, setUsedLetters] = React.useState([]);\n  const { randomWord, status, fetchRandomWord } = useRandomWord();\n\n  // Add/remove key down event listener\n  React.useEffect(() => {\n    const handleKeyDown = ({ key }) => {\n      // Pressed key is not alphabetical or has been used already\n      if (!/^[a-z]$/i.test(key) || usedLetters.includes(key.toUpperCase())) {\n        return;\n      }\n\n      setUsedLetters(usedLetters.concat(key.toUpperCase()));\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [usedLetters]);\n\n  // When random word is too long fetches new one\n  React.useEffect(() => {\n    if (randomWord.length > MAX_WORD_LENGTH) {\n      fetchRandomWord();\n    }\n  }, [randomWord, fetchRandomWord]);\n\n  // Fetches new word and resets the used letters\n  const startNewGame = () => {\n    setUsedLetters([]);\n    fetchRandomWord();\n  };\n\n  // Starts the first game\n  const startFirstGame = () => {\n    setIsFirstGame(false);\n  };\n\n  const missedLetters = usedLetters.filter((l) => !randomWord.includes(l));\n  const guessedLetters = usedLetters.filter((l) => randomWord.includes(l));\n\n  // Game is lost when player user reached steps limit\n  const isGameOver = missedLetters.length === MAX_MISSED_LETTERS;\n\n  // Game is won when each letter of the random word can be found\n  // among the guessed letters\n  const isGameWon = randomWord\n    .split('')\n    .every((l) => guessedLetters.includes(l));\n\n  // Fetch status\n  const isLoading = status === 'pending';\n  const isError = status === 'rejected';\n  const isSuccess = status === 'resolved';\n\n  // Initial game\n  if (isFirstGame) {\n    return (\n      <Layout>\n        <Modal\n          title=\"Netguru Hangman\"\n          description={`This is a simple Hangman game, have fun and good luck!`}\n          buttonText=\"Start game\"\n          onButtonClick={startFirstGame}\n        />\n        <Folk visiblePartsCount={11} />\n        <YouMissed\n          missedLetters={['B', 'D', 'E', 'Z', 'P', 'U', 'K', 'L', 'Q', 'W']}\n        />\n        <Letters word=\"HANGMAN\" guessedLetters={['H', 'A']} />\n      </Layout>\n    );\n  }\n\n  // After the initial game\n  return (\n    <Layout>\n      {isLoading && <Modal title=\"Loading...\" noButton />}\n      {isError && (\n        <Modal\n          title=\"Ooops :(\"\n          description=\"Something went wrong, try refreshing the page.\"\n          noButton\n        />\n      )}\n      {isGameOver && isSuccess && (\n        <Modal\n          title=\"Game over\"\n          buttonText=\"New word\"\n          onButtonClick={startNewGame}\n        />\n      )}\n      {isGameWon && isSuccess && (\n        <Modal\n          title=\"You won!\"\n          buttonText=\"Again\"\n          description={`Congratulations, you missed ${missedLetters.length} letters.`}\n          onButtonClick={startNewGame}\n        />\n      )}\n      <Folk visiblePartsCount={missedLetters.length} />\n      <YouMissed missedLetters={missedLetters} />\n      <Letters word={randomWord} guessedLetters={guessedLetters} />\n    </Layout>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\r\n\r\nexport function useRandomWord() {\r\n  const [word, setWord] = React.useState('');\r\n  const [status, setStatus] = React.useState('idle');\r\n\r\n  // Fetches random world from WordsAPI\r\n  const fetchRandomWord = React.useCallback(async () => {\r\n    setStatus('pending');\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://wordsapiv1.p.rapidapi.com/words/?random=true`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\r\n            'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\r\n          },\r\n        }\r\n      );\r\n\r\n      const { word: fetchedWord } = await response.json();\r\n\r\n      setStatus('resolved');\r\n      setWord(fetchedWord.toUpperCase());\r\n    } catch (e) {\r\n      setStatus('rejected');\r\n\r\n      // console.log(e.message);\r\n    }\r\n  }, []);\r\n\r\n  // Initial fetch\r\n  React.useEffect(() => {\r\n    fetchRandomWord();\r\n  }, [fetchRandomWord]);\r\n\r\n  return { status, randomWord: word, fetchRandomWord };\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'app';\nimport 'fonts/fonts.scss';\nimport 'index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}